// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`100010000e0f100a0e0f100a0e0f100a0e0f100a050c0d09050c0d09050c0d09050c0d0904060b0804060b0804060b0804060b08010203070102030701020307010203070e0f100a1e201f111e201f110e0f100a050c0d091d1714121d171412050c0d0904060b081c1615131c16151304060b08010203071b1a19181b1a1918010203070e0f100a1e201f111e201f110e0f100a050c0d091d1714121d171412050c0d0904060b081c1615131c16151304060b08010203071b1a19181b1a1918010203070e0f100a0e0f100a0e0f100a0e0f100a050c0d09050c0d09050c0d09050c0d0904060b0804060b0804060b0804060b0801020307010203070102030701020307`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterSouth1,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterWest0,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterNorth1,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterEast1,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.purpleOuterSouth0,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterWest0,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterNorth0], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 . . . 2 . . 2 . . . . 
2 . 2 . 2 . 2 . 2 . . 2 2 . . 2 
2 . 2 . . . 2 . . . . . 2 2 . 2 
2 . 2 2 2 2 2 2 2 2 2 . . . . 2 
2 . . . . . . . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 . 2 . . . . . 2 
2 . . . . . . 2 . . . 2 2 2 . 2 
2 2 2 . 2 2 . 2 2 2 2 2 . . . 2 
2 . . . . 2 . . . . . 2 2 2 . 2 
2 . 2 . . 2 2 2 2 2 . . . . . 2 
2 . 2 2 2 2 . . . 2 2 2 2 2 2 2 
2 . . . . . . 2 . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
. . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark0,sprites.dungeon.stairEast,sprites.dungeon.darkGroundCenter,sprites.dungeon.stairLarge], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010202010202020102020202020202040102020102010201010201010101010101020201020102010202010202020201010201010201020102010101010102010102020202010202020201020201020101020101010101010101010202010201010202020201020202020202020102010101010102020202020102020201020101020201010101010201020202020201010202020202020101010101020202010102020202020202020202020202020101010101010101010202010101010101020201020201020202020202010202010202020202020202020202020202020103010101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 . . . 2 . . . . . . . . 
2 . . 2 . 2 . 2 2 . 2 2 2 2 2 2 
2 . . 2 . 2 . 2 . . 2 . . . . 2 
2 . 2 2 . 2 . 2 . 2 2 2 2 2 . 2 
2 . . . . 2 . . . . 2 . . 2 . 2 
2 . 2 2 2 2 2 2 2 2 2 . . 2 . 2 
2 . . . . 2 . . . . . . . 2 . 2 
2 2 2 2 . . . . . 2 . . . 2 . 2 
2 . . 2 2 2 2 2 . 2 . . . . . 2 
2 . . . . . . 2 2 2 2 2 . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 . . 2 2 2 2 2 2 
. . 2 . . 2 . . . . . . 2 . . 2 
. . . . . . . . . . . . . . . 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark0,sprites.dungeon.darkGroundCenter,myTiles.tile3,myTiles.tile4], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level5":return tiles.createTilemap(hex``, img`
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . 2 . . . 2 . . 2 . . 2 
2 2 2 2 . 2 . 2 . 2 . . 2 . 2 2 
2 . . 2 . . . 2 . . . . 2 . . 2 
2 . 2 2 2 2 2 2 2 2 . . 2 2 . 2 
2 . . 2 . 2 . . . . . . 2 . . 2 
2 2 . 2 . 2 . 2 2 2 2 2 2 . . 2 
2 . . . . 2 . 2 . . . . . . . 2 
2 . 2 2 2 2 . . . . 2 2 2 2 2 2 
2 . . . . 2 2 2 2 . 2 . . . . 2 
2 . 2 2 . . . . . . 2 . . . . 2 
2 2 2 2 2 2 . 2 . . . . 2 2 . 2 
2 . . . 2 . . 2 . . . . 2 . . 2 
2 . 2 . 2 . 2 2 2 2 2 2 2 . 2 2 
. . 2 . . . . 2 . . . . . . . 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark0,sprites.dungeon.darkGroundCenter,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
2 2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 . . . . . 2 . 2 
2 . 2 2 2 2 . . . 2 2 2 2 2 . 2 
2 . . . . 2 . . 2 2 . 2 . . . 2 
2 . 2 . 2 2 2 . . 2 . 2 2 2 . 2 
2 2 2 . 2 . 2 2 . . . 2 . . . 2 
2 . . . 2 . . 2 . . . 2 2 2 . 2 
2 . 2 2 2 2 . 2 2 . . . 2 2 . 2 
2 . . . 2 . . . . . 2 . . 2 . 2 
2 2 2 . 2 2 2 2 2 2 2 2 . 2 . 2 
2 . 2 . . . . 2 . . . 2 . 2 . 2 
2 . 2 2 2 2 . 2 . 2 . 2 . 2 . 2 
2 . 2 . . . . 2 . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 . 2 . 2 . 2 . 2 
2 . . . 2 . . . . 2 . . . . . 2 
2 2 2 2 2 2 2 2 2 2 . 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark0,sprites.dungeon.darkGroundCenter,myTiles.tile5,myTiles.tile6], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "myTile1":
            case "tile5":return tile5;
            case "myTile2":
            case "tile6":return tile6;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
